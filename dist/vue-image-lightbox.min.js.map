{"version":3,"sources":["webpack://Lightbox/webpack/universalModuleDefinition","webpack://Lightbox/webpack/bootstrap","webpack://Lightbox/./src/components/script.js?b59e","webpack://Lightbox/./src/components/script.js","webpack://Lightbox/./src/components/template.html?8e5c","webpack://Lightbox/./src/components/template.html","webpack://Lightbox/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://Lightbox/./src/components/LightBox.vue","webpack://Lightbox/./node_modules/hammerjs/hammer.js"],"names":["root","factory","exports","module","define","amd","Lightbox","window","t","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","__webpack_exports__","_node_modules_babel_loader_lib_index_js_script_js_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__","_node_modules_babel_loader_lib_index_js_script_js_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0___default","__WEBPACK_IMPORT_KEY__","a","Hammer","require","props","images","type","Array","required","disableScroll","Boolean","showLightBox","startAt","Number","nThumbs","showThumbs","autoPlay","autoPlayTime","siteLoading","showCaption","lengthToLoadMore","closeText","String","previousText","nextText","previousThumbText","nextThumbText","data","select","this","lightBoxOn","timer","computed","thumbIndex","halfDown","Math","floor","length","begin","end","imagesThumb","_this","map","_ref","src","thumb","loading","error","_ref2","watch","document","onToggleLightBox","$emit","mounted","_this2","setInterval","nextImage","$refs","container","hammer","on","previousImage","methods","querySelector","classList","toggle","addEventListener","addKeyEvent","removeEventListener","showImage","index","$set","event","keyCode","closeLightBox","beforeDestroy","clearInterval","render","_vm","_h","$createElement","_c","_self","click","$event","stopPropagation","directives","rawName","expression","ref","staticClass","_v","attrs","title","_t","staticStyle","enable-background","fill","x","y","width","height","viewBox","srcset","domProps","innerHTML","_s","caption","current","total","_e","_l","image","arg","class","xml:space","staticRenderFns","_withStripped","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","_template_html_vue_type_template_id_77795e85___WEBPACK_IMPORTED_MODULE_0__","_script_js_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__","component","b","__file","__WEBPACK_AMD_DEFINE_RESULT__","exportName","undefined","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","TYPE_FUNCTION","round","abs","now","Date","setTimeoutContext","fn","timeout","setTimeout","bindFn","invokeArrayArg","isArray","each","obj","iterator","forEach","deprecate","method","message","deprecationMessage","Error","stack","replace","log","console","warn","apply","arguments","target","TypeError","output","source","nextKey","extend","dest","merge","keys","inherit","child","base","properties","childP","baseP","constructor","_super","boolOrFn","val","args","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","removeEventListeners","hasParent","node","parentNode","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","push","prefixed","prefix","prop","camelProp","toUpperCase","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","COMPUTE_INTERVAL","INPUT_START","INPUT_END","INPUT_CANCEL","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","PROPS_XY","PROPS_CLIENT_XY","Input","manager","callback","self","inputTarget","domHandler","ev","enable","init","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","offset","offsetDelta","prevDelta","prevInput","deltaX","deltaY","offsetDirection","getDirection","start","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","rotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","v","srcEvent","emit","recognize","clientX","clientY","p1","p2","sqrt","atan2","PI","evEl","evTarget","evWin","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","SingleTouchInput","started","touches","all","changed","changedTouches","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","DEDUP_TIMEOUT","TouchMouseInput","mouse","primaryTouch","lastTouches","setLastTouch","eventData","lastTouch","lts","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","dx","dy","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","TouchAction","set","compute","actions","update","touchAction","recognizers","recognizer","getTouchAction","hasPanX","hasPanY","join","preventDefaults","prevented","preventDefault","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","Recognizer","defaults","id","state","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","preset","Manager","handlers","oldCssProps","inputClass","toggleCssProps","item","recognizeWith","requireFailure","cssProps","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","remove","events","off","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","INPUT_MOVE","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press"],"mappings":"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","file":"vue-image-lightbox.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Lightbox\"] = factory();\n\telse\n\t\troot[\"Lightbox\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js!./script.js?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!./script.js?vue&type=script&lang=js&\"","let Hammer\n\nif (typeof window !== 'undefined') {\n  Hammer = require('hammerjs')\n}\n\nrequire('./style.css')\n\n\nexport default {\n  props: {\n    images: {\n      type: Array,\n      required: true,\n    },\n\n    disableScroll: {\n      type: Boolean,\n      default: true,\n    },\n\n    showLightBox: {\n      type: Boolean,\n      default: true,\n    },\n\n    startAt: {\n      type: Number,\n      default: 0,\n    },\n\n    nThumbs: {\n      type: Number,\n      default: 7,\n    },\n\n    showThumbs: {\n      type: Boolean,\n      default: true,\n    },\n\n    // Mode\n    autoPlay: {\n      type: Boolean,\n      default: false,\n    },\n\n    autoPlayTime: {\n      type: Number,\n      default: 3000,\n    },\n\n    siteLoading: {\n      default: null,\n    },\n\n    showCaption: {\n      type: Boolean,\n      default: false,\n    },\n\n    lengthToLoadMore: {\n      type: Number,\n      default: 0\n    },\n\n    closeText: {\n      type: String,\n      default: 'Close (Esc)'\n    },\n\n    previousText: {\n      type: String,\n      default: 'Previous',\n    },\n\n    nextText: {\n      type: String,\n      default: 'Next',\n    },\n\n    previousThumbText: {\n      type: String,\n      default: 'Previous'\n    },\n\n    nextThumbText: {\n      type: String,\n      default: 'Next'\n    },\n  },\n\n  data() {\n    return {\n      select: this.startAt,\n      lightBoxOn: this.showLightBox,\n      timer: null,\n    }\n  },\n\n  computed: {\n    thumbIndex() {\n      const halfDown = Math.floor(this.nThumbs / 2)\n\n      if (this.select >= halfDown && this.select < this.images.length - halfDown)\n        return {\n          begin: this.select - halfDown + (1 - this.nThumbs % 2),\n          end: this.select + halfDown,\n        }\n\n      if (this.select < halfDown)\n        return {\n          begin: 0,\n          end: this.nThumbs - 1,\n        }\n\n      return {\n        begin: this.images.length - this.nThumbs,\n        end: this.images.length - 1,\n      }\n    },\n\n    imagesThumb() {\n      if (this.siteLoading) {\n        return this.images.map(({thumb}) => ({\n          src: thumb,\n          loading: this.siteLoading,\n          error: this.siteLoading,\n        }))\n      }\n\n      return this.images.map(({thumb}) => thumb)\n    },\n  },\n\n  watch: {\n    lightBoxOn(value) {\n      if (document != null) {\n        this.onToggleLightBox(value)\n      }\n    },\n\n    select() {\n      if (this.select >= this.images.length - this.lengthToLoadMore - 1)\n        this.$emit('onLoad')\n\n      if (this.select === this.images.length - 1)\n        this.$emit('onLastIndex')\n\n      if (this.select === 0)\n        this.$emit('onFirstIndex')\n\n      if (this.select === this.startAt)\n        this.$emit('onStartIndex')\n    },\n  },\n\n  mounted() {\n    if (this.autoPlay) {\n      this.timer = setInterval(() => {\n        this.nextImage()\n      }, this.autoPlayTime)\n    }\n\n    // this.onToggleLightBox(this.lightBoxOn)\n\n    if (this.$refs.container) {\n      const hammer = new Hammer(this.$refs.container)\n\n      hammer.on('swiperight', () => {\n        this.previousImage()\n      })\n\n      hammer.on('swipeleft', () => {\n        this.nextImage()\n      })\n    }\n  },\n\n  methods: {\n    onToggleLightBox(value) {\n      if (this.disableScroll) {\n        document.querySelector('html').classList.toggle('no-scroll', value)\n      }\n\n      document.querySelector('body').classList.toggle('vue-lb-open', value)\n      this.$emit('onOpened', value)\n\n      if (value) {\n        document.addEventListener('keydown', this.addKeyEvent)\n      } else {\n        document.removeEventListener('keydown', this.addKeyEvent)\n      }\n    },\n\n    showImage(index) {\n      this.$set(this, 'lightBoxOn', true)\n      this.$set(this, 'select', index)\n    },\n\n    addKeyEvent(event) {\n      if (event.keyCode === 37) this.previousImage() // left arrow\n      if (event.keyCode === 39) this.nextImage() // right arrow\n      if (event.keyCode === 27) this.closeLightBox() // esc\n    },\n\n    closeLightBox() {\n      this.$set(this, 'lightBoxOn', false)\n    },\n\n    nextImage() {\n      this.$set(this, 'select', (this.select + 1) % this.images.length)\n    },\n\n    previousImage() {\n      this.$set(this, 'select', (this.select + this.images.length - 1) % this.images.length)\n    },\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('keydown', this.addKeyEvent)\n\n    if (this.autoPlay) {\n      clearInterval(this.timer)\n    }\n  },\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      on: {\n        click: function($event) {\n          $event.stopPropagation()\n          return _vm.closeLightBox($event)\n        }\n      }\n    },\n    [\n      _vm.images && _vm.images.length > 0\n        ? _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.lightBoxOn,\n                  expression: \"lightBoxOn\"\n                }\n              ],\n              ref: \"container\",\n              staticClass: \"vue-lb-container\"\n            },\n            [\n              _c(\"div\", { staticClass: \"vue-lb-content\" }, [\n                _c(\"div\", { staticClass: \"vue-lb-header\" }, [\n                  _c(\"span\"),\n                  _vm._v(\" \"),\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"vue-lb-button-close\",\n                      attrs: { type: \"button\", title: _vm.closeText }\n                    },\n                    [\n                      _vm._t(\"close\", [\n                        _c(\"span\", [\n                          _c(\n                            \"svg\",\n                            {\n                              staticStyle: {\n                                \"enable-background\": \"new 0 0 512 512\"\n                              },\n                              attrs: {\n                                fill: \"white\",\n                                x: \"0px\",\n                                y: \"0px\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                viewBox: \"0 0 512 512\"\n                              }\n                            },\n                            [\n                              _c(\"path\", {\n                                attrs: {\n                                  d:\n                                    \"M443.6,387.1L312.4,255.4l131.5-130c5.4-5.4,5.4-14.2,0-19.6l-37.4-37.6c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4 L256,197.8L124.9,68.3c-2.6-2.6-6.1-4-9.8-4c-3.7,0-7.2,1.5-9.8,4L68,105.9c-5.4,5.4-5.4,14.2,0,19.6l131.5,130L68.4,387.1 c-2.6,2.6-4.1,6.1-4.1,9.8c0,3.7,1.4,7.2,4.1,9.8l37.4,37.6c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1L256,313.1l130.7,131.1 c2.7,2.7,6.2,4.1,9.8,4.1c3.5,0,7.1-1.3,9.8-4.1l37.4-37.6c2.6-2.6,4.1-6.1,4.1-9.8C447.7,393.2,446.2,389.7,443.6,387.1z\"\n                                }\n                              })\n                            ]\n                          )\n                        ])\n                      ])\n                    ],\n                    2\n                  )\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"vue-lb-figure\",\n                    on: {\n                      click: function($event) {\n                        $event.stopPropagation()\n                      }\n                    }\n                  },\n                  [\n                    _c(\n                      \"transition\",\n                      { attrs: { mode: \"out-in\", name: \"fade\" } },\n                      [\n                        _c(\"img\", {\n                          key: _vm.images[_vm.select].src,\n                          staticClass: \"vue-lb-modal-image\",\n                          attrs: {\n                            src: _vm.images[_vm.select].src,\n                            srcset: _vm.images[_vm.select].srcset || \"\"\n                          }\n                        })\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"div\", {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.showCaption,\n                          expression: \"showCaption\"\n                        }\n                      ],\n                      staticClass: \"vue-lb-info\",\n                      domProps: {\n                        innerHTML: _vm._s(_vm.images[_vm.select].caption)\n                      }\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"vue-lb-footer\" }, [\n                      _c(\"div\", { staticClass: \"vue-lb-footer-info\" }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"vue-lb-footer-count\" },\n                        [\n                          _vm._t(\n                            \"footer\",\n                            [\n                              _vm._v(\n                                \"\\n              \" +\n                                  _vm._s(_vm.select + 1) +\n                                  \" / \" +\n                                  _vm._s(_vm.images.length) +\n                                  \"\\n            \"\n                              )\n                            ],\n                            {\n                              current: _vm.select + 1,\n                              total: _vm.images.length\n                            }\n                          )\n                        ],\n                        2\n                      )\n                    ])\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"vue-lb-thumbnail-wrapper\" }, [\n                _vm.showThumbs\n                  ? _c(\n                      \"div\",\n                      { staticClass: \"vue-lb-thumbnail\" },\n                      [\n                        _vm.images.length > 1\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass:\n                                  \"vue-lb-thumbnail-arrow vue-lb-thumbnail-left\",\n                                attrs: {\n                                  type: \"button\",\n                                  title: _vm.previousThumbText\n                                },\n                                on: {\n                                  click: function($event) {\n                                    $event.stopPropagation()\n                                    return _vm.previousImage()\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\"previousThumb\", [\n                                  _c(\"span\", [\n                                    _c(\n                                      \"svg\",\n                                      {\n                                        attrs: {\n                                          fill: \"white\",\n                                          x: \"0px\",\n                                          y: \"0px\",\n                                          width: \"100%\",\n                                          height: \"100%\",\n                                          viewBox: \"0 0 512 512\"\n                                        }\n                                      },\n                                      [\n                                        _c(\"path\", {\n                                          attrs: {\n                                            d:\n                                              \"M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z\"\n                                          }\n                                        })\n                                      ]\n                                    )\n                                  ])\n                                ])\n                              ],\n                              2\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.imagesThumb, function(image, index) {\n                          return _c(\"div\", {\n                            directives: [\n                              {\n                                name: \"lazy\",\n                                rawName: \"v-lazy:background-image\",\n                                value: image,\n                                expression: \"image\",\n                                arg: \"background-image\"\n                              },\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value:\n                                  index >= _vm.thumbIndex.begin &&\n                                  index <= _vm.thumbIndex.end,\n                                expression:\n                                  \"index >= thumbIndex.begin && index <= thumbIndex.end\"\n                              }\n                            ],\n                            key:\n                              typeof image === \"string\"\n                                ? \"\" + image + index\n                                : index,\n                            class:\n                              \"vue-lb-modal-thumbnail\" +\n                              (_vm.select === index ? \"-active\" : \"\"),\n                            on: {\n                              click: function($event) {\n                                $event.stopPropagation()\n                                return _vm.showImage(index)\n                              }\n                            }\n                          })\n                        }),\n                        _vm._v(\" \"),\n                        _vm.images.length > 1\n                          ? _c(\n                              \"button\",\n                              {\n                                staticClass:\n                                  \"vue-lb-thumbnail-arrow vue-lb-thumbnail-right\",\n                                attrs: {\n                                  type: \"button\",\n                                  title: _vm.nextThumbText\n                                },\n                                on: {\n                                  click: function($event) {\n                                    $event.stopPropagation()\n                                    return _vm.nextImage()\n                                  }\n                                }\n                              },\n                              [\n                                _vm._t(\"nextThumb\", [\n                                  _c(\"span\", [\n                                    _c(\n                                      \"svg\",\n                                      {\n                                        attrs: {\n                                          fill: \"white\",\n                                          x: \"0px\",\n                                          y: \"0px\",\n                                          width: \"100%\",\n                                          height: \"100%\",\n                                          viewBox: \"0 0 512 512\"\n                                        }\n                                      },\n                                      [\n                                        _c(\"path\", {\n                                          attrs: {\n                                            d:\n                                              \"M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z\"\n                                          }\n                                        })\n                                      ]\n                                    )\n                                  ])\n                                ])\n                              ],\n                              2\n                            )\n                          : _vm._e()\n                      ],\n                      2\n                    )\n                  : _vm._e()\n              ]),\n              _vm._v(\" \"),\n              _vm.images.length > 1\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"vue-lb-arrow vue-lb-left\",\n                      attrs: { type: \"button\", title: _vm.previousText },\n                      on: {\n                        click: function($event) {\n                          $event.stopPropagation()\n                          return _vm.previousImage()\n                        }\n                      }\n                    },\n                    [\n                      _vm._t(\"previous\", [\n                        _c(\"span\", [\n                          _c(\n                            \"svg\",\n                            {\n                              attrs: {\n                                fill: \"white\",\n                                x: \"0px\",\n                                y: \"0px\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                viewBox: \"0 0 512 512\"\n                              }\n                            },\n                            [\n                              _c(\"path\", {\n                                attrs: {\n                                  d:\n                                    \"M213.7,256L213.7,256L213.7,256L380.9,81.9c4.2-4.3,4.1-11.4-0.2-15.8l-29.9-30.6c-4.3-4.4-11.3-4.5-15.5-0.2L131.1,247.9 c-2.2,2.2-3.2,5.2-3,8.1c-0.1,3,0.9,5.9,3,8.1l204.2,212.7c4.2,4.3,11.2,4.2,15.5-0.2l29.9-30.6c4.3-4.4,4.4-11.5,0.2-15.8 L213.7,256z\"\n                                }\n                              })\n                            ]\n                          )\n                        ])\n                      ])\n                    ],\n                    2\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.images.length > 1\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"vue-lb-arrow vue-lb-right\",\n                      attrs: { type: \"button\", title: _vm.nextText },\n                      on: {\n                        click: function($event) {\n                          $event.stopPropagation()\n                          return _vm.nextImage()\n                        }\n                      }\n                    },\n                    [\n                      _vm._t(\"next\", [\n                        _c(\"span\", [\n                          _c(\n                            \"svg\",\n                            {\n                              attrs: {\n                                fill: \"white\",\n                                x: \"0px\",\n                                y: \"0px\",\n                                width: \"100%\",\n                                height: \"100%\",\n                                viewBox: \"0 0 512 512\",\n                                \"xml:space\": \"preserve\"\n                              }\n                            },\n                            [\n                              _c(\"path\", {\n                                attrs: {\n                                  d:\n                                    \"M298.3,256L298.3,256L298.3,256L131.1,81.9c-4.2-4.3-4.1-11.4,0.2-15.8l29.9-30.6c4.3-4.4,11.3-4.5,15.5-0.2l204.2,212.7 c2.2,2.2,3.2,5.2,3,8.1c0.1,3-0.9,5.9-3,8.1L176.7,476.8c-4.2,4.3-11.2,4.2-15.5-0.2L131.3,446c-4.3-4.4-4.4-11.5-0.2-15.8 L298.3,256z\"\n                                }\n                              })\n                            ]\n                          )\n                        ])\n                      ])\n                    ],\n                    2\n                  )\n                : _vm._e()\n            ]\n          )\n        : _vm._e()\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","export * from \"-!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./template.html?vue&type=template&id=77795e85&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import { render, staticRenderFns } from \"./template.html?vue&type=template&id=77795e85&\"\nimport script from \"./script.js?vue&type=script&lang=js&\"\nexport * from \"./script.js?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/svenraju/Sites/vue-image-lightbox/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('77795e85', component.options)\n    } else {\n      api.reload('77795e85', component.options)\n    }\n    module.hot.accept(\"./template.html?vue&type=template&id=77795e85&\", function () {\n      api.rerender('77795e85', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/components/LightBox.vue\"\nexport default component.exports","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"sourceRoot":""}